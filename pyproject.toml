[tool.poetry]
name = "drf-pipeline-views"
version = "0.2.2"
description = "Django REST framework views using the pipeline pattern."
authors = [
    "Matti Lamppu <lamppu.matti.akseli@gmail.com>",
]
packages = [
    { include = "pipeline_views" },
]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/MrThearMan/drf-pipeline-views"
repository = "https://github.com/MrThearMan/drf-pipeline-views"
keywords = [
    "django",
    "djangorestframework",
    "drf",
    "pipeline",
    "views",
]
classifiers = [
    "Environment :: Web Environment",
    "Framework :: Django",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Framework :: Django :: 1.10",
    "Framework :: Django :: 1.11",
    "Framework :: Django :: 2.0",
    "Framework :: Django :: 2.1",
    "Framework :: Django :: 2.2",
    "Framework :: Django :: 3.0",
    "Framework :: Django :: 3.1",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Intended Audience :: Developers",
    "Natural Language :: English",
]
include = [
    "README.md",
    "LICENSE",
]
exclude = [
    "tests",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/MrThearMan/drf-pipeline-views/issues"

[tool.poetry.dependencies]
python = ">=3.7,<4"
Django = ">=1.10"
djangorestframework = ">=3.7.0"
typing-extensions = "^4.0.1"

[tool.poetry.dev-dependencies]
pytest-cov = "^3.0.0"
pytest-django = "^4.4.0"
tomli = "^2.0.0"
pre-commit = "^2.13.0"
tox-gh-actions = "^2.7.0"
tox = "^3.24.4"
coveralls = "^3.2.0"
mkdocs = "^1.2.2"
flake8 = "^4.0.1"
pylint = "^2.12.2"
mypy = "^0.930"
django-stubs = "^1.9.0"
djangorestframework-stubs = "^1.4.0"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120
skip_gitignore = "True"
lines_after_imports = 2

[tool.pylint.MASTER]
ignore-paths = [
    "tests/*",
    "docs/*",
    ".venv/*",
    ".tox/*",
]

[tool.pylint.messages_control]
disable = "C0330, C0326, C0114, C0115, C0116, R0801, R0903, R0913, R1721"

[tool.pylint.format]
max-line-length = "120"

[tool.pylint.miscellaneous]
notes = "FIXME,XXX,BUG"

[tool.mypy]
python_version = "3.10"
warn_return_any = "True"
warn_unused_configs = "True"
plugins = [
    "mypy_django_plugin.main",
    "mypy_drf_plugin.main",
]

[tool.django-stubs]
django_settings_module = "tests.django.settings"

[tool.coverage.run]
relative_files = true

[tool.coverage.report]
omit = [
    "tests/*",
    "docs/*",
    ".venv/*",
    ".tox/*",
]
exclude_lines = [
    "if TYPE_CHECKING:",
    "except ImportError:",
]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{37, 38, 39}-drf{307, 308, 309, 310, 311, 312, 313}, py310-drf313
isolated_build = true

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310

[testenv]
whitelist_externals =
    poetry
setenv =
    PYTHONPATH = {toxinidir}
    DJANGO_SETTINGS_MODULE = tests.django.settings
deps =
    drf307,drf308: Django>=1.10,<2.0
    drf309,drf310: Django>=2.0,<2.1
    drf311: Django>=2.0,<2.1
    drf312: Django>=2.2,<2.3
    py{37,38,39}-drf313: Django>=2.2,<2.3
    py310-drf313: Django>=4.0,<4.1

    drf307: djangorestframework >=3.7.0,<3.8.0
    drf308: djangorestframework >=3.8.0,<3.9.0
    drf309: djangorestframework >=3.9.0,<3.10.0
    drf310: djangorestframework >=3.10.0,<3.11.0
    drf311: djangorestframework >=3.11.0,<3.12.0
    drf312: djangorestframework >=3.12.0,<3.13.0
    drf313: djangorestframework >=3.13.0,<3.14.0

    typing-extensions
    pytest-cov
    pytest-django
commands =
    coverage run -m pytest -vv -s --log-cli-level=INFO
"""

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
